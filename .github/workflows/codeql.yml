name: "CodeQL"

on:
  push:
    branches: ["main", "code-development", "code-production", "code-staging"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '29 20 * * 2'

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp', 'javascript', 'typescript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    # Autobuild attempts to build any compiled languages.
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
    
    # Save the CodeQL results zip to the repository
    - name: Save CodeQL results
      run: |
        output_file="./results/codeql/codeql_results_${{ matrix.language }}_$(date '+%Y%m%d%H%M%S').zip"
        mkdir -p ./results/codeql
        
        # Determine the correct source zip file based on the matrix language
        case ${{ matrix.language }} in
          csharp)
            source_zip="/home/runner/work/_temp/codeql_databases/csharp.zip"
            ;;
          javascript)
            source_zip="/home/runner/work/_temp/codeql_databases/javascript.zip"
            ;;
          typescript)
            source_zip="/home/runner/work/_temp/codeql_databases/typescript.zip"
            ;;
          *)
            echo "Invalid language: ${{ matrix.language }}"
            exit 1
            ;;
        esac
        
        cp "$source_zip" "$output_file"
        
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add "$output_file"
        git commit -m "Add CodeQL results for ${{ matrix.language }} [skip ci]"  # Skip workflow runs
        git push

  save_results:
    runs-on: ubuntu-latest
    steps:
      # Download the CodeQL results artifact from the previous workflow run
      - name: Download CodeQL results artifact
        uses: actions/download-artifact@v2
        with:
          name: codeql-results

      # Save the downloaded artifact to the main repository .results/codeql/ directory
      - name: Save CodeQL results to main repository
        run: |
           mkdir -p ./.results/codeql
           cp ${{ runner.temp }}/codeql-results/codeql_results_*.zip ./.results/codeql/
      
      # Commit and push the changes to the main repository
      - name: Commit and Push CodeQL results to main repository
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          
          # Set the GitHub username and personal access token from the secrets as environment variables
          export GH_USERNAME=$LOGIN
          export GH_TOKEN=$TOKEN

          # Add and commit the changes
          git add .results/codeql
          git commit -m "Add CodeQL results from workflow run ${{ github.run_number }} [skip ci]"
          
          # Authenticate using the GitHub personal access token and push the changes
          git remote set-url origin "https://${GH_USERNAME}:${GH_TOKEN}@github.com/${{ github.repository }}"
          git push origin main
