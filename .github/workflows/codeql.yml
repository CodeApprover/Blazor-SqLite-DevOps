name: "CodeQL"

on:
  push:
    branches: ["main", "code-development", "code-production", "code-staging"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '29 20 * * 2'

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp', 'javascript', 'typescript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    # Autobuild attempts to build any compiled languages.
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # Cache the CodeQL trap for csharp
    - name: Cache CodeQL trap for csharp
      uses: actions/cache@v2
      with:
        path: /home/runner/work/_temp/codeql_databases/csharp
        key: codeql-trap-1-2.14.0-csharp-${{ github.sha }}
      
    # Cache the CodeQL trap for typescript
    - name: Cache CodeQL trap for typescript
      uses: actions/cache@v2
      with:
        path: /home/runner/work/_temp/codeql_databases/typescript
        key: codeql-trap-1-2.14.0-typescript-${{ github.sha }}
      
    # Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

    # Save the CodeQL results zip to the repository
    - name: Save CodeQL results
      id: save_results
      run: |    
        # Determine the correct source zip file based on the matrix language
        case ${{ matrix.language }} in
          csharp)
            source_zip="/home/runner/work/_temp/codeql_databases/csharp.zip"
            ;;
          javascript)
            source_zip="/home/runner/work/_temp/codeql_databases/javascript.zip"
            ;;
          typescript)
            source_zip="/home/runner/work/_temp/codeql_databases/typescript.zip"
            ;;
          *)
            echo "Invalid language: ${{ matrix.language }}"
            exit 1
            ;;
        esac
  
        # Move the source_zip file to the repository's results/codeql directory
        mkdir -p ./results/codeql
        cp "$source_zip" ./results/codeql/
        
        # Set the personal access token as an environment variable for git
        export GH_TOKEN="${{ secrets.TOKEN }}"
        
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git config --global user.login "${{ secrets.LOGIN }}"
        
        git add ./results/codeql/
        git commit -m "Add CodeQL results for ${{ matrix.language }} [skip ci]"  # Skip workflow runs
        git push origin main
