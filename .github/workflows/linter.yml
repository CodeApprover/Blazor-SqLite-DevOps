---
name: "Linter"

on:
  push:
    branches: ["code-development", "code-production", "code-staging"]

jobs:
  ##############################################################################################################
  # Report usage
  ##############################################################################################################
  report:
    name: 1. Report
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ Job triggered by a ${{ github.event_name }}"
      - run: echo "üêß Running ${{ runner.os }} server on GitHub Actions."
      - run: echo "üîé Branch ${{ github.ref }}. Repository ${{ github.repository }}"

##############################################################################################################
# Run StyleCop Linting - https://github.com/StyleCop/StyleCop
##############################################################################################################
  stylecop-linting:
    name: 2. StyleCop Linting
    runs-on: ubuntu-latest
    needs: report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore Dependencies
        run: |
          dotnet restore --no-cache "./Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/Blazor SqlLite Golf Club.csproj"
      - name: StyleCop dotnet build
        run: |
          dotnet build --no-restore /p:StyleCopEnabled=true "./Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/Blazor SqlLite Golf Club.csproj"

##############################################################################################################
# Run CodeQL Linter - https://github.com/github/codeql.
# Set CodeQL supported languages.
# Checkout code-base.
# Lint code-base.
# Generate PDF report.
##############################################################################################################
  analyze:
    name: 3. CodeQL Analysis
    needs: stylecop-linting
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['csharp']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

##############################################################################################################
# Run SuperLinter - https://github.com/marketplace/actions/super-linter
##############################################################################################################
  super-linter:
    name: 4. Super Linter
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - name: Superlint checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint code-base
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

##############################################################################################################
# Run SuperLinter - https://github.com/marketplace/actions/super-linter
##############################################################################################################
  development-environment-unit-tests:
    needs: super-linter
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-development') && github.event_name == 'push'
    environment:
      name: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Nunit dependencies
        run: dotnet restore "./Nunit_Player_Unit_Tests/Nunit_Player_Unit_Tests.csproj"

      - name: Run NUnit unit tests
        run: dotnet test "./Nunit_Player_Unit_Tests/Nunit_Player_Unit_Tests.csproj" --filter Category=Development --no-restore --logger:"console;verbosity=detailed"

      - name: Install Xunit dependencies
        run: dotnet restore "./Xunit_Game_Unit_Tests/Xunit_Game_Unit_Tests.csproj"

      - name: Run XUnit unit tests
        run: dotnet test "./Xunit_Game_Unit_Tests/Xunit_Game_Unit_Tests.csproj" --filter Category=Development --no-restore --logger:"console;verbosity=detailed"
