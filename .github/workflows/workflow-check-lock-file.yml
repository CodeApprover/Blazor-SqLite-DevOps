name: "Check Lock File"

# Exit Code Commentary:
# 1 - The commit SHA does not exist
# 2 - Failed to push the lock file
# 3 - Lock file was not successfully created or pushed

on:
  repository_dispatch:
    types: trigger-check-lock-file

jobs:
  check-for-lock-file:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: (github.actor != 'CodeApprover')

    steps:

    - name: Set SHA from client payload
      run: echo "SHA=$(echo '${{ github.event.client_payload.sha }}')" >> $GITHUB_ENV

    - name: Set Branch Name from client payload
      run: echo "BRANCH_NAME=${{ github.event.client_payload.branch_name }}" >> $GITHUB_ENV

    - name: Set .csproj from client payload
      run: echo "CSPROJ=${{ github.event.client_payload.csproj }}" >> $GITHUB_ENV

    - name: Checkout SHA Repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0 # Fetch all

    - name: Report
      run: |
        date
        echo "SHA=${{ env.SHA }}"
        echo "Environment=$(${{ env.BRANCH_NAME }} | sed '#code-##')"
        echo "Branch=${{ env.BRANCH_NAME }}"
        echo "Committer=$(git log -1 --pretty=format:'%an')"

    - name: Configure Git User and Email
      run: |
        git config user.name "CodeApprover"
        git config user.email "pucfada@pm.me"

    - name: Set Lock File Name Based on Branch
      run: |
        branch=${{ env.BRANCH_NAME }}
        if [[ $branch == "code-"* ]]; then
            lock_name=${branch#code-}
            echo "LOCK_FILE=.$lock_name.lock" >> $GITHUB_ENV
        elif [[ $branch == "main" ]]; then
            echo "LOCK_FILE=.main.lock" >> $GITHUB_ENV
        fi

    - name: Check Lock File with Retry
      env: 
        MAX_RETRIES: ${{ secrets.MAX_RETRIES }}
        SLEEP_DURATION: ${{ secrets.SLEEP_DURATION }}
      run: |
        for (( i=1; i<=${MAX_RETRIES}; i++ )); do
          echo "::group::Attempt $i of $MAX_RETRIES}"
          git fetch origin ${{ env.BRANCH_NAME }}

          if ! git show "${{ env.SHA }}~1"; then
            echo "::error::The commit ${{ env.SHA }} does not exist!"
            exit 1
          fi

          git checkout ${{ env.BRANCH_NAME }}
          commits_before_sha=$(git rev-list ${{ env.SHA }}~1..${{ env.BRANCH_NAME }} --)

          if git ls-tree -r $commits_before_sha | grep "$LOCK_FILE"; then
            echo "Lock file found. Waiting ${{ env.SLEEP_DURATION }} minutes before retrying."
            sleep $SLEEP_DURATION
          else
            break
          fi

          echo "::endgroup::"
        done

        echo "${{ env.SHA }}" > "${{ env.LOCK_FILE }}"
        git add "${{ env.LOCK_FILE }}"
        git commit -m "Adding ${{ env.LOCK_FILE }} for ${{ env.SHA }} [skip ci]."

        if ! git push origin HEAD:${{ env.BRANCH_NAME }}; then
          echo "::error::Failed to push ${{ env.LOC_FILE }} for ${{ env.SHA }}"
          exit 2
        fi

        git fetch origin ${{ env.BRANCH_NAME }}
        if ! git ls-tree HEAD -- ${{ env.LOCK_FILE }}; then
          echo "::error::Lock file ${{ env.LOCK_FILE }} was not successfully created or pushed."
          exit 3
        else
          echo "Lock file ${{ env.LOCK_FILE }} successfully created and pushed."
        fi

    - name: Trigger Versioning Workflow
      if: success()
      uses: actions/github-script@v5
      with:
        script: |
          const repo = context.repo;
          const payload = {
            event_type: "trigger-versioning",
            client_payload: {
              sha: "${{ env.SHA }}",
              branch_name: "${{ env.BRANCH_NAME }}",
              csproj: "${{ env.CSPROJ }}"
            }
          };
          await github.request(`POST /repos/${repo.owner}/${repo.repo}/dispatches`, payload);
