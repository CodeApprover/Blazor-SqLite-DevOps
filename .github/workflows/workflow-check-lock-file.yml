name: "Check Lock File"

# Exit Code Commentary:
# 1 - Failed to extract branch name for SHA.
# 2 - Unknown branch.
# 3 - Commit does not exist.
# 4 - No branch contains the commit.
# 5 - Commit before payload SHA does not exist.
# 6 - Failed to push.
# 7 - Lock file was not successfully created or pushed.

on:
  repository_dispatch:
    types: trigger-check-lock-file

jobs:
  check-for-lock-file:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: (github.actor != 'CodeApprover')

    steps:
    - name: Report SHA and Workflow Timestamp
      run: |
        echo "Payload SHA: ${{ github.event.client_payload.sha }}"
        echo "::group::Workflow Timestamp"
        date
        echo "::endgroup::"

    - name: Checkout SHA repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ github.event.client_payload.sha }}
        fetch-depth: 0

    - name: Configure Git User and Email
      run: |
        git config user.name "CodeApprover"
        git config user.email "pucfada@pm.me"

    - name: Set Branch and Lock File Name
      run: |
        branch=$(git branch -r --contains ${{ github.event.client_payload.sha }} | grep 'origin/' | sed 's#origin/##' | head -n 1 | xargs)
        echo "Detected branch: $branch"
        if [[ -z "${branch}" ]]; then
            echo "::error::Failed to extract branch name for SHA: ${{ github.event.client_payload.sha }}"
            exit 1
        fi
        echo "BRANCH_NAME=${branch}" >> $GITHUB_ENV
        case "${branch}" in
          code-*) echo "LOCK_FILE=.${branch}.lock" >> $GITHUB_ENV ;;
          main) echo "LOCK_FILE=.main.lock" >> $GITHUB_ENV ;;
          *)
            echo "::error::Unknown branch: $branch."
            exit 2
          ;;
        esac

    - name: Check Lock File with Retry
      env: 
        MAX_RETRIES: ${{ secrets.MAX_RETRIES }}
      run: |
        SHA=${{ github.event.client_payload.sha }}
        BRANCH=${{ env.BRANCH_NAME }}
        LOCK_FILE=${{ env.LOCK_FILE }}

        for (( i=1; i<=${MAX_RETRIES}; i++ )); do
          echo "::group::Attempt $i of $MAX_RETRIES"
          git fetch origin $BRANCH

          if ! git show $SHA; then
            echo "::error::The commit $SHA does not exist!"
            exit 3
          fi

          if [[ -z "$(git branch --contains $SHA)" ]]; then
            echo "::error::No branch contains the commit $SHA!"
            exit 4
          fi

          git checkout $BRANCH
          commits_before_sha=$(git rev-list $SHA~1..$BRANCH --)

          if ! git show $SHA~1; then
            echo "::error::The commit before $SHA does not exist!"
            exit 5
          fi

          if git ls-tree -r $commits_before_sha | grep "$LOCK_FILE"; then
            echo "Lock file found. Waiting ${{ env.SLEEP_DURATION }} minutes before retrying."
            sleep ${{ env.SLEEP_DURATION }}
          else
            break
          fi

          echo "::endgroup::"
        done

        echo "$SHA" > "$LOCK_FILE"
        git add "$LOCK_FILE"
        git commit -m "Adding $LOCK_FILE for $SHA [skip ci]"

        if ! git push origin HEAD:$BRANCH; then
          echo "::error::Failed to push."
          exit 6
        fi

        git fetch origin $BRANCH
        if ! git ls-tree HEAD -- "$LOCK_FILE"; then
          echo "::error::Lock file was not successfully created or pushed."
          exit 7
        else
          echo "Lock file successfully created and pushed."
        fi

    - name: Trigger Versioning Workflow
      if: success()
      uses: actions/github-script@v5
      with:
        script: |
          const repo = context.repo;
          const payload = {
            event_type: "trigger-versioning",
            client_payload: { sha: "${{ github.event.client_payload.sha }}" }
          };
          await github.request(`POST /repos/${repo.owner}/${repo.repo}/dispatches`, payload);
