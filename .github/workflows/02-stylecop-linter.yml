---
name: "StyleCop Linter"

# Lints all commits on all valid branches for CSharp compliance

# Exit Codes
# 1: SHA checkout failure
# 2: Dotnet restore error
# 3: Dotnet stylecop build error
# 4: Curl command to trigger next workflow failed

on:
  repository_dispatch:
    types: "trigger-stylecop-linter"

env:
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.branch_name }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:

  stylecop-linting:

    name: StyleCop Linting
    runs-on: ubuntu-latest
    timeout-minutes: 15
    #if: (github.actor != 'CodeApprover')

    steps:

    - name: Checkout SHA Repository
      id: checkout
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0

    - name: Handle checkout Outcome
      run: |
        if [[ "${{ steps.checkout-sha.outcome }}" == "failure" ]]; then
          echo "##[error] Failure during checkout of SHA $${{ env.SHA }} on branch ${{ env.SHA_BRANCH }}."
          exit 1
        else
          echo "##[debug] Successful checkout of SHA $${{ env.SHA }} on branch ${{ env.SHA_BRANCH }}."
        fi

    - name: Report
      run: |
        echo "##[debug] Checking initial state"
        date
        echo "SHA=${{ env.SHA }}"
        echo "Environment=${{ env.SHA_BRANCH }}"
        echo "Branch=${{ env.SHA_BRANCH }}"
        echo "Committer=$(git log -1 --pretty=format:'%an')"

    - name: Setup .NET Environment
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: '7.0.x'

    - name: Retrieve Cached dotnet Dependencies
      id: cache-dotnet-restore
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Restore Dependencies
      if: steps.cache-dotnet-restore.outputs.cache-hit == 'false'
      run: dotnet restore --no-cache "${{ env.CSPROJ }}" -v detailed || (echo "##[error] Dotnet restore failed" && exit 2)

    - name: Dotnet Build with StyleCop
      run: |
        CMD="dotnet build --no-restore \"${{ env.CSPROJ }}\" "
        CMD+="-v detailed "
        CMD+="/p:StyleCopEnabled=true "
        CMD+="/p:StyleCopTreatErrorsAsWarnings=false "
        CMD+="/p:StyleCopForceFullAnalysis=false"
        eval "$CMD" || (echo "##[error] Dotnet build failed" && exit 3)

    - name: Trigger Required Workflow # 03-development-tests.yml | 03-staging-tests.yml | 03-production-tests.yml
      if: success()
      run: |
        case "${{ env.SHA_BRANCH }}" in
          code-development) trigger="trigger-development-tests" ;;
          code-staging) trigger="trigger-staging-tests" ;;
          code-production) trigger="trigger-production-tests" ;;
        esac
        BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
        SHA="\"sha\": \"${{ env.SHA }}\","
        CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
        BRANCH="\"branch_name\": \"${{ env.SHA_BRANCH }}\""
        END="}}"
        PAYLOAD="$BASE$SHA$CSPROJ$BRANCH$END"
        curl -s -o /dev/null -X POST \
        -H "Authorization: Bearer ${{ secrets.AUTH }}" \
        -H "Accept: application/vnd.github.v3+json" \
        -d "$PAYLOAD" \
        "https://api.github.com/repos/${{ github.repository }}/dispatches"
