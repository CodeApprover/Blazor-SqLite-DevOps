---
name: "Development Tests"

# Executes a development environment suite of unit tests for the "code-development" branch.
# 1. Utilizes the Nunit and Xunit test frameworks for running unit tests.
# 2. Once the tests pass successfully, triggers the next workflow.

on:
  repository_dispatch:
    types: trigger-development-tests

env:
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.sha_branch }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:

  development-tests:

    name: Unit Tests (${{ matrix.test_framework }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    #if: github.actor != 'CodeApprover'

    strategy:
      matrix:
        test_framework: [Nunit, Xunit]

    steps:

    - name: Checkout SHA Repository
      id: checkout-sha
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0

    - name: Install Test Suite Dependencies
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
        else
          test_type="Xunit_Game_Unit_Tests"
        fi
        CMD="dotnet restore --no-cache"
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

    - name: Run Nunit and Xunit Unit Tests
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
          log_file_name="nunit-results.trx"
        else
          test_type="Xunit_Game_Unit_Tests"
          log_file_name="xunit-results.trx"
        fi
        CMD="dotnet test"
        CMD+=" --no-restore --verbosity detailed"
        CMD+=" --logger \"trx;LogFileName=${log_file_name}\""
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

  trigger-next-workflow:

    if: success()
    name: Trigger Next Workflow
    runs-on: ubuntu-latest
    needs: development-tests
    timeout-minutes: 15

    steps:

    - name: Trigger Next Workflow # 04-lockfile-checker.yml
      if: success()
      run: |
        trigger="trigger-lockfile-checker"
        BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
        SHA="\"sha\": \"${{ env.SHA }}\","
        CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
        BRANCH="\"sha_branch\": \"${{ env.SHA_BRANCH }}\""
        END="}}"

        curl -s -o /dev/null -X POST \
        -H "Authorization: Bearer ${{ secrets.AUTH }}" \
        -H "Accept: application/vnd.github.v3+json" \
        -d "$BASE$SHA$CSPROJ$BRANCH$END" \
        "https://api.github.com/repos/${{ github.repository }}/dispatches"
  
