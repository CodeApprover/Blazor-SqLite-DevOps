---
name: "Development Tests"

# Runs Development Environment Test Suite (code-development)

# Exit Codes
# 1: SHA checkout failure
# 2: Failed to publish status from workflow
# 3: Curl command to trigger next workflow failed

on:
  repository_dispatch:
    types: "trigger-development-tests"

env:
  # Pre-validated values
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.branch_name }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:

  development-tests:

    name: Unit Tests (${{ matrix.test_framework }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    #if: github.actor != 'CodeApprover'

    environment:
      development

    strategy:
      matrix:
        test_framework: [Nunit, Xunit]

    steps:

    - name: Checkout SHA Repository
      id: checkout-sha
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0

    - name: Handle checkout Outcome
      run: |
        if [[ "${{ steps.checkout-sha.outcome }}" == "failure" ]]; then
          echo "##[error] Failure during checkout of SHA $${{ env.SHA }} on branch ${{ env.SHA_BRANCH }}."
          exit 1
        else
          echo "##[debug] Successful checkout of SHA $${{ env.SHA }} on branch ${{ env.SHA_BRANCH }}."
        fi

    - name: Confirm Branch
      run: |
        CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
        if [[ "$CURRENT_BRANCH" != "code-development" ]]; then
          echo "##[error] $CURRENT_BRANCH is not code-development --> Exiting 2"
          exit 2
        else
          echo "Confirmed on code-development branch."
        fi

    - name: Report
      run: |
        echo "##[debug] Checking initial state"
        date
        echo "SHA=${{ env.SHA }}"
        echo "Environment=${{ env.SHA_BRANCH }}"
        echo "Branch=${{ env.SHA_BRANCH }}"
        echo "Committer=$(git log -1 --pretty=format:'%an')"

    - name: Retrieve Cached dotnet Dependencies
      id: cache-dotnet-restore
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-${{ env.SHA }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Install dependencies
      if: steps.cache-dotnet-restore.outputs.cache-hit != 'true'
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
        else
          test_type="Xunit_Game_Unit_Tests"
        fi
        CMD="dotnet restore --no-cache"
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

    - name: Run Nunit and Xunit unit tests
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
          log_file_name="nunit-results.trx"
        else
          test_type="Xunit_Game_Unit_Tests"
          log_file_name="xunit-results.trx"
        fi
        CMD="dotnet test"
        CMD+=" --no-restore --verbosity detailed"
        CMD+=" --logger \"trx;LogFileName=${log_file_name}\""
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

  trigger-next-workflow:

    if: success()
    name: Trigger Next Workflow
    runs-on: ubuntu-latest
    needs: development-tests
    timeout-minutes: 15

    steps:

    - name: Trigger Next Workflow # 04-lockfile-checker.yml
      run: |
        trigger="trigger-lockfile-checker"
        BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
        SHA="\"sha\": \"${{ env.SHA }}\","
        CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
        BRANCH="\"branch_name\": \"${{ env.SHA_BRANCH }}\""
        END="}}"

        curl -s -o /dev/null -X POST \
        -H "Authorization: Bearer ${{ secrets.AUTH }}" \
        -H "Accept: application/vnd.github.v3+json" \
        -d "$BASE$SHA$CSPROJ$BRANCH$END" \
        "https://api.github.com/repos/${{ github.repository }}/dispatches"
