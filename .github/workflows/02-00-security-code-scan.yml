######################################
# Workflow: Security Code Scan

# Description:
# This workflow performs a security code scan on the application codebase.
# It ensures the integrity and security of the code by running a series of checks
# and validations. The results are then uploaded for further review and action.

# Trigger: Activated by completion of the "Authentication Gate" workflow and scheduled runs.

# Logical Flow (Steps):
# 1. Checkout the repository.
# 2. Setup the .NET environment.
# 3. Retrieve cached .NET dependencies or restore them if not cached.
# 4. Build the .NET application.
# 5. Add the Security Code Scanning action to the workflow.
# 6. Convert the security scan results to the Sarif format.
# 7. Upload the Sarif results to GitHub for review and action.

# Exit Codes:
# 34 - Dotnet restore failed.
# 35 - Dotnet build failed.

######################################

---
name: SCS Scan # Security Code Scan

on:
  workflow_run:
    workflows: ["Authentication Gate"] # run when these
    types: [completed] # complete
    branches-ignore:
      - 'code-development' # but not for these branches
  schedule:
    - cron: '37 9 * * 2,5' # and at 9:37am on Tuesdays and Fridays

env:
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.sha_branch }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:
  SCS:
    name: Security Code Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Repository # Step 1
        uses: actions/checkout@v3.6.0

      - name: Setup .NET Environment # Step 2
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: "7.0.x"

      - name: Retrieve Cached .NET Dependencies # Step 3
        id: cache-dotnet-restore
        uses: actions/cache@v3.3.1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ env.SHA }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Restore .NET Dependencies # Step 4
        run: |
          if [ "${{ steps.cache-dotnet-restore.outputs.cache-hit }}" != 'true' ]; then
            dotnet restore --no-cache "$CSPROJ" || (echo "##[error] Dotnet restore failed" && exit 34)
          fi

      - name: Build .NET Application # Step 5
        run: dotnet build --no-restore $CSPROJ || (echo "##[error] Dotnet build failed" && exit 35)

      - name: Add Security Code Scanning Action # Step 6
        uses: security-code-scan/security-code-scan-add-action@v1.2

      - name: Convert Security Scan Results to Sarif # Step 7
        uses: security-code-scan/security-code-scan-results-action@v1.3

      - name: Upload Sarif Results to GitHub # Step 8
        uses: github/codeql-action/upload-sarif@v2
