---
name: "Report"

# Reports on the initial SHA push

# Exit Codes
# 1: SHA checkout failure
# 2: Error finding .csproj file
# 3: Failed to publish status from workflow
# 4: Curl command to trigger next workflow failed

on:
  push:
    branches: ["code-development", "code-production", "code-staging"]

jobs:
  report-usage:
    name: "Report Usage"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: (github.actor != 'CodeApprover')

    steps:
    
    - name: Checkout SHA Repository
      id: checkout-sha
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ github.sha }}
        fetch-depth: 0

    - name: Handle checkout Outcome
      run: |
        if [[ "${{ steps.checkout-sha.outcome }}" == "failure" ]]; then
          echo "##[error] Failure during checkout of SHA $${{ github.sha }}."
          exit 1
        else
          echo "##[debug] Successful checkout of SHA $${{ github.sha }}."
        fi

    - name: Set Commit SHA
      run: |
        echo "SHA=${{ github.sha }}" >> $GITHUB_ENV
        echo "##[debug] SHA=$SHA"

    - name: Set Branch Name
      run: |
        echo "##[debug] Current Branch and Commit:"
        echo "##[debug] $(git rev-parse --abbrev-ref HEAD) @ $(git rev-parse HEAD)"

        echo "##[debug] All references:"
        echo "##[debug] $(git show-ref)"

        branch=$(echo "${{ github.ref }}" | sed "s#refs/heads/##")
        echo "SHA_BRANCH=$branch" >> $GITHUB_ENV

        if git show-ref --verify --quiet "refs/remotes/origin/code-development"; then
          echo "##[debug] Branch $SHA_BRANCH detected in repository ${{ github.repository }}"
        else
          echo "##[error] Branch $SHA_BRANCH does not exist in repository ${{ github.repository }}"
          echo "##[debug] branch=$branch"
          echo "##[debug] SHA_BRANCH=$SHA_BRANCH"
          echo "##[debug] All branches:"
          git branch -a
          exit 1
        fi

    - name: Set .csproj File
      run: |
        CSPROJ="${{ github.workspace }}/$(echo "${{ env.SHA_BRANCH }}" | sed 's/^code-//')/${{ secrets.PROJECT_NAME }}/${{ secrets.PROJECT_NAME }}.csproj"
        echo "##[debug] CSPROJ=$CSPROJ"
        if [[ ! -f "$CSPROJ" ]]; then
          echo "##[error] .csproj file $CSPROJ not found."
          echo "##[debug] ${{ github.workspace }}/$(echo "${{ env.SHA_BRANCH }}" | sed 's/^code-//') ls -la -->"
          ls -la ${{ github.workspace }}/$(echo "${{ env.SHA_BRANCH }}" | sed 's/^code-//')/
          exit 2
        fi
        echo "CSPROJ=$CSPROJ" >> $GITHUB_ENV
        echo "##[debug] CSPROJ=$CSPROJ"

    - name: Report Commit Details
      run: |
        echo "----- COMMIT DETAILS -----"
        echo "Branch Name: ${{ env.SHA_BRANCH }}"
        echo "Commit SHA: ${{ github.sha }}"
        echo "Commit Message: ${{ github.event.head_commit.message }}"
        echo "Commit Author: ${{ github.event.head_commit.author.name }}"
        echo "Committer Email: ${{ github.event.head_commit.author.email }}"
        echo "Pusher Name: ${{ github.event.pusher.name }}"
        echo "Actor: ${{ github.actor }}"
        echo "--------------------------"

    - name: Report GitHub Environment and Workflow Details
      run: |
        echo "----- GITHUB ENVIRONMENT & WORKFLOW DETAILS -----"
        echo "Date: $(date)"
        echo "Event Name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        echo "Repository Owner: ${{ github.repository_owner }}"
        echo "Workflow Name: ${{ github.workflow }}"
        echo "GitHub Server URL: ${{ github.server_url }}"
        echo "GitHub API URL: ${{ github.api_url }}"
        echo "GitHub GraphQL URL: ${{ github.graphql_url }}"
        echo "Runner OS: ${{ runner.os }}"
        echo "Workspace: ${{ github.workspace }}"
        [ ! -z "${{ github.base_ref }}" ] && echo "Base Ref: ${{ github.base_ref }}"
        [ ! -z "${{ github.head_ref }}" ] && echo "Head Ref: ${{ github.head_ref }}"
        echo "-----------------------------------------------"

    - name: Report Job, Run and Runner Details
      run: |
        echo "----- JOB, RUN AND RUNNER DETAILS -----"
        echo "Job Name: ${{ github.job }}"
        echo "Event ID: ${{ github.run_id }}"
        echo "Run Number: ${{ github.run_number }}"
        echo "Runner Name: ${{ runner.name }}"
        echo "Runner Label: ${{ runner.label }}"
        echo "Runner Tool Cache: ${{ runner.tool_cache }}"
        echo "Runner Temp Directory: ${{ runner.temp }}"
        echo "GitHub Event Before: ${{ github.event.before }}"
        echo "GitHub Event After: ${{ github.event.after }}"
        echo "---------------------------------------"

    - name: Set default job status
      run: echo "JOB_STATUS=success" >> $GITHUB_ENV

    - name: Set failure status if any step failed
      run: |
        echo "##[error] Failed detected in previous steps"
        echo "JOB_STATUS=failure" >> $GITHUB_ENV
      if: failure()

    - name: Publish success or failure status for tracking
      run: |
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
        -H "Authorization: token ${{ secrets.AUTH }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        -d '{
          "state": "${{ env.JOB_STATUS }}", 
          "description": "Result from Workflow ${{ github.workflow }}",
          "context": "status/${{ github.workflow }}"
        }')
        if [[ "$RESPONSE" -ne 200 && "$RESPONSE" -ne 201 && "$RESPONSE" -ne 202 ]]; then
          echo "##[error] Failed to publish status. HTTP Code: $RESPONSE"
          exit 3
        else
          echo "##[debug] Successfully published status for ${{ github.workflow }}."
        fi

    - name: Trigger Dependency Caching Workflow # 01-cache-dependencies.yml
      if: success()      
      run: |
        trigger="trigger-cache-dependencies"
        BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
        SHA="\"sha\": \"${{ env.SHA }}\","
        CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
        BRANCH="\"branch_name\": \"${{ env.SHA_BRANCH }}\""
        END="}}"
        PAYLOAD="$BASE$SHA$CSPROJ$BRANCH$END"

        CMD="curl -s -o /dev/null -w \"%{http_code}\" -X POST "
        CMD+="-H \"Authorization: Bearer ${{ secrets.AUTH }}\" "
        CMD+="-H \"Accept: application/vnd.github.v3+json\" "
        CMD+="-d '$PAYLOAD' "
        CMD+="https://api.github.com/repos/${{ github.repository }}/dispatches"
        RESPONSE=$("${CMD[@]}")

        if [[ "$RESPONSE" -ne 200 && "$RESPONSE" -ne 201 && "$RESPONSE -ne 202 ]]; then
          echo "##[error] Failed to publish status. HTTP Code: $RESPONSE"
          exit 3
        else
          echo "##[debug] Successfully published status for ${{ github.workflow }}"
        fi
