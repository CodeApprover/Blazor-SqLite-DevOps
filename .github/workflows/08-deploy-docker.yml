---
name: "Deploy Docker"

on:
  repository_dispatch:
    types: trigger-deploy-docker

env:
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.sha_branch }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:

  save-docker-image:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    #if: (github.actor != 'CodeApprover')

    steps:
    
    - name: Checkout SHA repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0

    - name: Log in to Docker Hub
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Enable Docker Experimental Features
      run: |
        echo '{ "experimental": true }' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker
        docker version

    - name: Determine next version tag
      run: |
        git fetch --tags
        if [ -z "$(git tag)" ]; then
          echo "##[error] No tags found. Exiting."
          exit 1
        fi
        latest_tag=$(git tag | sort -V | tail -n 1)     
        echo "##[info] Latest Tag = $latest_tag"
        echo "NEW_VERSION=${latest_tag}" >> $GITHUB_ENV

    - name: Build and push Docker image
      run: |
        if docker manifest inspect ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.NEW_VERSION }} > /dev/null; then
          echo "Docker image already exists! Skipping Docker push."
        else
          docker_file=$(find ./$(echo "${{ env.SHA_BRANCH }}" | sed 's/^code-//') -name "Dockerfile" | head -n 1)
          if [[ ! -f "$docker_file" ]]; then
            echo "##[error] Dockerfile not found for ${{ env.SHA }}"
            exit 2
          fi
          DOCKER_REPO=$(echo "$(basename "${{ github.workspace }}")" | tr 'A-Z' 'a-z')
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.NEW_VERSION }}" -f "${docker_file}" "${{ github.workspace }}"
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.NEW_VERSION }}"
        fi

    - name: Trigger Next Workflow # 09-deploy-git.yml
      if: success()
      run: |
        trigger="trigger-deploy-git"
        BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
        SHA="\"sha\": \"${{ env.SHA }}\","
        CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
        BRANCH="\"sha_branch\": \"${{ env.SHA_BRANCH }}\""
        END="}}"

        curl -s -o /dev/null -X POST \
        -H "Authorization: Bearer ${{ secrets.AUTH }}" \
        -H "Accept: application/vnd.github.v3+json" \
        -d "$BASE$SHA$CSPROJ$BRANCH$END" \
        "https://api.github.com/repos/${{ github.repository }}/dispatches"
