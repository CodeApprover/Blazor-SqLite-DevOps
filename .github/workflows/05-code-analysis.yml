---
name: "CodeQL Analysis"  # https://github.com/github/codeql

# Runs code and security analysis using the CodeQL tool.
# Executes for the code-staging and code-production branches only.

# 1 - Checkout Repository: Pulls the current state of the repository using the payload SHA.
# 2 - Initialize CodeQL: Sets up the CodeQL environment for the specified languages (C# and JavaScript).
# 3 - Setup .NET Environment: Installs the specified .NET version.
# 4 - Retrieve Cached dotnet Dependencies: Attempts to fetch cached .NET dependencies to expedite the restoration process.
# 5 - Restore Dependencies: Restores necessary .NET dependencies. If cache retrieval fails, it performs a fresh restore.
# 6 - Dotnet Build: Compiles the code using the .NET framework.
# 7 - Perform CodeQL Analysis: Executes the CodeQL tool to conduct a code and security analysis.
# 8 - If successful, triggers SuperLiner for production code or proceeds to the versioning workflow for staging.

# Exit Codes
# 34 - Dotnet restore failed
# 35 - Dotnet build failed

on:
  repository_dispatch:
    types: trigger-codeql-analysis

env:
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.sha_branch }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:
  codeql-analysis-codeql:
    name: Code Analysis CodeQL
    runs-on: ubuntu-latest
    timeout-minutes: 360
    #if: (github.actor != 'CodeApprover')

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp', 'javascript']

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3.5.3
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '7.0.x'

      - name: Retrieve Cached dotnet Dependencies
        id: cache-dotnet-restore
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ env.SHA }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Restore Dependencies
        run: |
          if [ "${{ steps.cache-dotnet-restore.outputs.cache-hit }}" != 'true' ]; then
            dotnet restore --no-cache "$CSPROJ" || (echo "##[error] Dotnet restore failed" && exit 34)
          fi

      - name: Dotnet build
        run: dotnet build --no-restore $CSPROJ  || (echo "##[error] Dotnet restore failed" && exit 35)

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Trigger Next Workflow # production 06-superlinter.yml | staging 07-versioning.yml
        if: success()
        run: |
          trigger="trigger-superlinter"
          if [ "${{ env.SHA_BRANCH }}" == "code-staging" ]; then
              trigger="trigger-versioning"
          fi
          echo "##[info] Calling $trigger"

          BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
          SHA="\"sha\": \"${{ env.SHA }}\","
          CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
          BRANCH="\"sha_branch\": \"${{ env.SHA_BRANCH }}\""
          END="}}"

          curl -s -o /dev/null -X POST \
          -H "Authorization: Bearer ${{ secrets.AUTH }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "$BASE$SHA$CSPROJ$BRANCH$END" \
          "https://api.github.com/repos/${{ github.repository }}/dispatches"
