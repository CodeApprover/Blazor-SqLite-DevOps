---
name: Failure

on:
  workflow_run:
    workflows:
      - Report
      - StyleCop Linter
      - Development Tests
      - Staging Tests
      - Production Tests
      - Docker Deploy
    types:
      - failure

env:
  PROJ_NAME: "Blazor SqlLite Golf Club"

jobs:

  revert-commit:
    name: Revert Failed Commit
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

    - name: Log Timestamp
      run: date

    - name: Get SHA of Commit
      run: echo "SHA=${{ github.event.client_payload.sha }}" >> $GITHUB_ENV

    - name: Checkout SHA repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0 # fetch entire history

    - name: Extract Branch Name from SHA Commit
      run: |
        branch=$(git branch -r --contains ${{ env.SHA }} | sed -n 's#^ *origin/##p' | head -n 1)
        if [[ -z "$branch" ]]; then
          echo "Failed to extract branch name for SHA: ${{ env.SHA }}"
          exit 1
        fi
        echo "BRANCH_NAME=$branch" >> $GITHUB_ENV

    - name: Switch to target branch
      run: |
        echo "Branch is ${{ env.BRANCH_NAME }}"
        git checkout ${{ env.BRANCH_NAME }}

    - name: Push the revert commit remotely
      continue-on-error: true
      run: git push https://${{ secrets.AUTH }}@github.com/CodeApprover/Blazor-SqLite-DevOps.git ${{ env.BRANCH_NAME }}

  notify-committer:
    runs-on: ubuntu-latest
    needs: revert-commit

    steps:

    - name: Notify Committer
      run: |
        COMMITTER=$(git log -1 --pretty=format:'%an')
        WORKFLOW_LINK="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        COMMENT_BODY="Hello @$COMMITTER, your recent commit ${{ github.event.workflow_run.head_sha }} "
        COMMENT_BODY+="has failed and has been automatically reverted. "
        COMMENT_BODY+="Please check the [workflow run]($WORKFLOW_LINK) for details, "
        COMMENT_BODY+="address any issues and try pushing again. Thank you!"
        
        CURL_CMD="curl -X POST"
        CURL_CMD+=" -H \"Authorization: token ${{ secrets.AUTH }}\""
        CURL_CMD+=" -H \"Accept: application/vnd.github.v3+json\""
        CURL_CMD+=" https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.workflow_run.head_sha }}/comments"
        CURL_CMD+=" -d \"{\\\"body\\\":\\\"$COMMENT_BODY\\\"}\""
        eval "$CURL_CMD"
