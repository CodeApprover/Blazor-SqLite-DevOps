---
name: Failure

# All branches

on:
  workflow_run:
    workflows:
      - Report
      - StyleCop Linter
      - Development Tests
      - Docker Deploy
    types:
      - complete

jobs:

  build-and-push:
  
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: github/branch-deploy@v7.2.0
      id: branch-deploy
      with:
        trigger: ".deploy"

    - name: Get SHA of Commit
      run: echo "SHA=$(echo '${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV

    - name: Checkout SHA repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0 # Fetch all

    - name: Set Branch Name and Environment
      run: |
        ref=$(echo "${{ github.ref }}" | sed 's#refs/heads/##')
        echo "BRANCH_NAME=$ref" >> $GITHUB_ENV
        envirn=$(echo "${{ BRANCH_NAME }}" | sed 's#code-##')
        echo "ENVIRN=${envirn}" >> $GITHUB_ENV

    - name: Increment version
      run: |
        declare -a VERSION=( $MAJOR $MINOR $PATCH )
        case "${{ env.ENVIRN }}" in
          "development") ((VERSION[2]++)) ;;
          "staging") ((VERSION[1]++)) ;;
          "production") ((VERSION[0]++)) ;;
        esac
        PRODUCTION=${VERSION[0]}
        STAGING=${VERSION[1]}
        DEVELOPMENT=${VERSION[2]}
        echo "NEW_VERSION=v${PRODUCTION}.${STAGING}.${DEVELOPMENT}" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      uses: docker/login-action@vv2.2.0
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker_repo="blazor-sqlite-devops"
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${docker_repo}:v${{ env.NEW_VERSION }} -f "./${{ env.PROJ_NAME }}/Dockerfile" "./${{ env.PROJ_NAME }}"
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${docker_repo}:v${{ env.NEW_VERSION }}
        echo "Deployed ${{ env.SHA }} from ${{ env.BRANCH_NAME }} for ${{ env.ENVIRN }} to Dockerhub"

    - name: Set new version secret
      uses: hmanzur/actions-set-secret@v2.0.0
      with:
        name: 'VERSION'
        value: ${{ env.NEW_VERSION }}
        repository: ${{ github.repository }}
        token: ${{ secrets.AUTH }}

    - name: Deploy
      if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
      run: echo "Deployed ${{ env.SHA }} from ${{ env.BRANCH_NAME }} to ${{ env.ENVIRN }} as ${{ env.DOCKER_NAME }}"
