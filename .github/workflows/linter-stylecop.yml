---
name: "StyleCop Linter"

# Lints all commits on all valid branches

on:
  repository_dispatch:
    types: "trigger-stylecop"

env:
  PROJ_NAME: "Blazor-SqLite-Golf-Club"
  SHA: ${{ github.event.client_payload.sha }}
  BRANCH_NAME: ${{ github.event.client_payload.branch_name }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:
  stylecop-linting:
    name: StyleCop Linting
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: (github.actor != 'CodeApprover')

    steps:
    - name: Checkout SHA Repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0 # Fetch all

    - name: Report
      run: |
        date
        echo "SHA=${{ env.SHA }}"
        echo "Environment=${{ env.BRANCH_NAME }}"
        echo "Branch=${{ env.BRANCH_NAME }}"
        echo "Committer=$(git log -1 --pretty=format:'%an')"

    - name: Setup .NET Environment
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: '7.0.x'

    - name: Retrieve Cached dotnet Dependencies
      id: cache-dotnet-restore
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Restore Dependencies
      if: steps.cache-dotnet-restore.outputs.cache-hit != 'true'
      run: dotnet restore --no-cache "${{ env.CSPROJ }}" -v detailed

    - name: Dotnet Build with StyleCop
      run: |
        dotnet build --no-restore "${{ env.CSPROJ }}" \
        -v detailed \
        /p:StyleCopEnabled=true \
        /p:StyleCopTreatErrorsAsWarnings=false \
        /p:StyleCopForceFullAnalysis=false

    - name: Trigger Appropriate Tests
      if: success()
      run: |
        case "${{ env.BRANCH_NAME }}" in
          code-development) EVENT_TYPE="trigger-development-tests" ;;
          code-staging) EVENT_TYPE="trigger-env-staging-tests" ;;
          code-production) EVENT_TYPE="trigger-production-tests" ;;
          *) echo "Error: Unexpected environment name"; exit 1 ;;
        esac
        curl -X POST \
             CMD="-H \"Authorization: Bearer ${{ secrets.AUTH }}\" "
             CMD+="-H \"Accept: application/vnd.github.v3+json \" "
             CMD+=-"d \"{\"event_type\": \"$EVENT_TYPE\", \"client_payload\": {\" "
             CMD+="\"sha\": \"${{ env.SHA }}\", "
             CMD+="\"csproj\": \"${{ env.CSPROJ }}\", "
             CMD+="\"branch_name\": \"${{ env.BRANCH_NAME }}\""
             CMD+="}}'"
             eval ${CMD}
