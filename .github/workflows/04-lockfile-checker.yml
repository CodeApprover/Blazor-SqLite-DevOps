---
name: "Check Lock File"

# Workflow to manage lock files for sequential task execution within a branch.

# Exit Codes
# 1: Failed to checkout SHA branch on retry
# 2: Failed to push lock file
# 3: Failed to fetch branch
# 4: Failed to detect pushed lock file
# 5: Failed to publish status from workflow
# 6: Curl command to trigger next workflow failed

on:
  repository_dispatch:
    types: trigger-lockfile-checker

env:
  SHA: ${{ github.event.client_payload.sha }}
  BRANCH_NAME: ${{ github.event.client_payload.branch_name }}
  CSPROJ: ${{ github.event.client_payload.csproj }}
  MAX_RETRIES: ${{ secrets.MAX_RETRIES }}
  SLEEP_MINUTES: ${{ secrets.SLEEP_MINUTES }}

jobs:

  check-for-lock-file:

    runs-on: ubuntu-latest
    timeout-minutes: 15
    #if: (github.actor != 'CodeApprover')
    
    steps:

    - name: Checkout SHA Repository
      id: checkout
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0

    - name: Configure Git User and Email
      run: |
        git config user.name "CodeApprover"
        git config user.email "pucfada@pm.me"

    - name: Set Lock File Name Based on Branch
      run: |
        branch=${{ env.BRANCH_NAME }}
        if [[ $branch == "code-"* ]]; then
            lock_name=${branch#code-}
            echo "LOCK_FILE=.$lock_name.lock" >> $GITHUB_ENV
        elif [[ $branch == "main" ]]; then
            echo "LOCK_FILE=.main.lock" >> $GITHUB_ENV
        fi

    - name: Check Lock File with Retry
      run: |
        for (( i=1; i<=${{ env.MAX_RETRIES }}; i++ )); do
        echo "::group::Attempt $i"
        git fetch origin ${{ env.BRANCH_NAME }}
        git checkout ${{ env.BRANCH_NAME }}
        if [ $? -ne 0 ]; then
            echo "::error::Failed to checkout ${{ env.BRANCH_NAME }}"
            exit 1
        fi

        commits_before_sha=$(git rev-list ${{ env.SHA }}~1..${{ env.BRANCH_NAME }} --)

        if git ls-tree -r $commits_before_sha | grep "${{ env.LOCK_FILE }}"; then
            echo "Lock file found. Waiting ${{ env.SLEEP_MINUTES }} minutes before retrying."
            sleep $((${{ env.SLEEP_MINUTES }} * 60))
        else
            break
        fi
        echo "::endgroup::"
        done

        echo "${{ env.SHA }}" > "${{ env.LOCK_FILE }}"
        git add "${{ env.LOCK_FILE }}"
        git commit -m "Adding ${{ env.LOCK_FILE }} for ${{ env.SHA }} [skip ci]."

        if ! git push origin HEAD:${{ env.BRANCH_NAME }}; then
        echo "::error::Failed to push ${{ env.LOCK_FILE }} for ${{ env.SHA }}"
        exit 2
        fi

        git fetch origin ${{ env.BRANCH_NAME }}
        if [ $? -ne 0 ]; then
        echo "::error::Failed to fetch ${{ env.BRANCH_NAME }}"
        exit 3
        fi

        if ! git ls-tree HEAD -- ${{ env.LOCK_FILE }}; then
        echo "::error::Lock file ${{ env.LOCK_FILE }} was not detected remotely."
        exit 4
        else
        echo "Lock file ${{ env.LOCK_FILE }} successfully created and pushed."
        fi

    - name: Trigger Next Workflow # 05-codeql-analysis.yml | 07-versioning.yml if development
      run: |
        trigger="trigger-codeql-analysis"
        if [ "${{ env.SHA_BRANCH }}" == "code-development" ]; then
            trigger="trigger-deploy-docker"
        fi
        echo "##[info] Calling $trigger"

        BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
        SHA="\"sha\": \"${{ env.SHA }}\","
        CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
        BRANCH="\"branch_name\": \"${{ env.SHA_BRANCH }}\""
        END="}}"

        curl -s -o /dev/null -X POST \
        -H "Authorization: Bearer ${{ secrets.AUTH }}" \
        -H "Accept: application/vnd.github.v3+json" \
        -d "$BASE$SHA$CSPROJ$BRANCH$END" \
        "https://api.github.com/repos/${{ github.repository }}/dispatches"
