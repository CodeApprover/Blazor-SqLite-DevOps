---
name: "Check Lock File"

# Exit Code Commentary:
# 1 - The commit SHA does not exist
# 2 - Failed to push the lock file
# 3 - Lock file was not successfully created or pushed

on:
  repository_dispatch:
    types: trigger-check-lock-file

env:
  SHA: ${{ github.event.client_payload.sha }}
  BRANCH_NAME: ${{ github.event.client_payload.branch_name }}
  CSPROJ: ${{ github.event.client_payload.csproj }}
  MAX_RETRIES: ${{ secrets.MAX_RETRIES }}
  SLEEP_MINUTES: ${{ secrets.SLEEP_MINUTES }}

jobs:
  check-for-lock-file:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: (github.actor != 'CodeApprover')
    
    steps:
      - name: Checkout SHA Repository
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ env.SHA }}
          fetch-depth: 0

      - name: Report
        run: |
          date
          echo "SHA=${{ env.SHA }}"
          branch_name=${{ env.BRANCH_NAME }}
          echo "Environment=$(echo $branch_name | sed 's#code-##')"
          echo "Branch=${{ env.BRANCH_NAME }}"
          echo "Committer=$(git log -1 --pretty=format:'%an')"

      - name: Configure Git User and Email
        run: |
          git config user.name "CodeApprover"
          git config user.email "pucfada@pm.me"

      - name: Set Lock File Name Based on Branch
        run: |
          branch=${{ env.BRANCH_NAME }}
          if [[ $branch == "code-"* ]]; then
              lock_name=${branch#code-}
              echo "LOCK_FILE=.$lock_name.lock" >> $GITHUB_ENV
          elif [[ $branch == "main" ]]; then
              echo "LOCK_FILE=.main.lock" >> $GITHUB_ENV
          fi

      - name: Check Lock File with Retry
        run: |
          for (( i=1; i<=${{ env.MAX_RETRIES }}; i++ )); do
            echo "::group::Attempt $i"
            git fetch origin ${{ env.BRANCH_NAME }}
            git checkout ${{ env.BRANCH_NAME }}
            if [ $? -ne 0 ]; then
              echo "::error::Failed to checkout ${{ env.BRANCH_NAME }}"
              exit 5
            fi

            commits_before_sha=$(git rev-list ${{ env.SHA }}~1..${{ env.BRANCH_NAME }} --)

            if git ls-tree -r $commits_before_sha | grep "${{ env.LOCK_FILE }}"; then
              echo "Lock file found. Waiting ${{ env.SLEEP_MINUTES }} minutes before retrying."
              sleep $((${{ env.SLEEP_MINUTES }} * 60))
            else
              break
            fi
            echo "::endgroup::"
          done

          echo "${{ env.SHA }}" > "${{ env.LOCK_FILE }}"
          git add "${{ env.LOCK_FILE }}"
          git commit -m "Adding ${{ env.LOCK_FILE }} for ${{ env.SHA }} [skip ci]."

          if ! git push origin HEAD:${{ env.BRANCH_NAME }}; then
            echo "::error::Failed to push ${{ env.LOCK_FILE }} for ${{ env.SHA }}"
            exit 2
          fi

          git fetch origin ${{ env.BRANCH_NAME }}
          if [ $? -ne 0 ]; then
            echo "::error::Failed to fetch ${{ env.BRANCH_NAME }}"
            exit 4
          fi

          if ! git ls-tree HEAD -- ${{ env.LOCK_FILE }}; then
            echo "::error::Lock file ${{ env.LOCK_FILE }} was not successfully created or pushed."
            exit 3
          else
            echo "Lock file ${{ env.LOCK_FILE }} successfully created and pushed."
          fi

      - name: Trigger Versioning Workflow
        if: success()
        uses: actions/github-script@v5
        with:
          script: |
            const repo = context.repo;
            const payload = {
              event_type: "trigger-versioning",
              client_payload: {
                sha: "${{ env.SHA }}",
                branch_name: "${{ env.BRANCH_NAME }}",
                csproj: "${{ env.CSPROJ }}"
              }
            };
            await github.request(`POST /repos/${repo.owner}/${repo.repo}/dispatches`, payload);
