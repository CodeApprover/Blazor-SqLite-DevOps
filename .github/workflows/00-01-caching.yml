---
name: "Cache Dependencies"

# ${{ github.workflow }} Overview
#
# This GitHub Actions workflow is dedicated to caching .NET dependencies, ensuring a smoother and faster build process.
#
# The cache-dependencies job has two main phases:
# 1. Prepare and Cache .NET Dependencies: This phase pulls the repository, restores the .NET dependencies 
#    for a given C# project file (CSPROJ), and caches these dependencies for future use.
# 2. Trigger Subsequent Workflow: If the caching process succeeds, this phase initiates the next workflow.
#
# Exit Codes:
#
# 34 - .NET dependency restoration failed for the provided C# project.
# 90 - Failed to trigger the next workflow (02-stylecop-linter.yml) after exhausting retries.

on:
  repository_dispatch:
    types: Cache-Dependencies

env:
  SHA: ${{ github.event.client_payload.sha }}
  CSPROJ: ${{ github.event.client_payload.csproj 
  NEXT_WORKFLOW: StyleCop-Linter

jobs:

  cache-dependencies:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # un-comment to block execution
    #if: (github.actor != ${{ github.repository_owner }})

    steps:

    - name: Checkout SHA Repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0

    - name: Restore dotnet Dependencies
      run: |
        echo "##[info] Restoring .NET dependencies for ${{ env.CSPROJ }}"
        dotnet restore --no-cache "${{ env.CSPROJ }}" -v detailed || (echo "##[error] Dotnet restore failed for ${{ env.CSPROJ }}" && exit 34)

    - name: Cache dotnet Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-${{ hashFiles('${{ env.SHA }}') }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Trigger Next Workflow # 02-stylecop-linter.yml
      if: success()
      run: |
        CMD="curl -L -X POST "
        CMD+="-H \"Accept: application/vnd.github+json\" "
        CMD+="-H \"Authorization: Bearer ${{ secrets.AUTH }}\" "
        CMD+="-H \"X-GitHub-Api-Version: 2022-11-28\" "
        CMD+="https://api.github.com/repos/${{ github.repository }}/dispatches "
        CMD+="-d '{\"event_type\":\"${{ env.NEXT_WORKFLOW }}\","
        CMD+="\"client_payload\":{"
        CMD+="\"sha\":\"${{ github.sha }}\","
        CMD+="\"csproj\":\"${{ env.CSPROJ }}\"}'"

        retries=0
        while [[ $retries -lt ${{ vars.MAX_RETRIES }} ]]; do
            eval "$CMD"
            CURL_EXIT_CODE=$?
            if [[ $CURL_EXIT_CODE -ne 0 ]]; then
                echo "##[error] Curl command failed on attempt $((retries+1)) with exit code $CURL_EXIT_CODE"
                retries=$((retries+1))
                if [[ $retries -lt ${{ vars.MAX_RETRIES }} ]]; then
                    echo "##[warn] Retrying in ${{ vars.WAIT_SECONDS }} seconds..."
                    sleep ${{ vars.WAIT_SECONDS }}
                else
                    echo "##[error] Exhausted ${{ vars.MAX_RETRIES }} retries at ${{ vars.WAIT_SECONDS }} intervals."
                    echo "##[error] Failed to trigger ${env.NEXT_WORKFLOW} workflow with CURL command: $CMD." && exit 90
                fi
            else
                break # successful curl
            fi    
        done
        echo "##[debug] CURL command: $CMD"
