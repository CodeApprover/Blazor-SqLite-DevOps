---
name: "Cache Dependencies"

on:
  repository_dispatch:
    types: Cache Dependencies

env:
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.sha_branch }}
  CSPROJ: ${{ github.event.client_payload.csproj }}
  NEXT_WORKFLOW: StyleCop Linter

jobs:
  cache-dependencies:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout SHA Repository
        uses: actions/checkout@v3.6.0
        with:
          ref: ${{ env.SHA }}
          fetch-depth: 0

      - name: Restore dotnet Dependencies
        run: |
          echo "##[info] Restoring .NET dependencies for ${{ env.CSPROJ }}"
          dotnet restore --no-cache "${{ env.CSPROJ }}" -v detailed || (echo "##[error] Dotnet restore failed for ${{ env.CSPROJ }}" && exit 34)

      - name: Cache dotnet Dependencies
        uses: actions/cache@v3.3.1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('${{ env.SHA }}') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Trigger Next Workflow
        if: success()
        run: |
  
          CMD=$(echo "curl -L -X POST" \
          "-H \"Accept: application/vnd.github+json\"" \
          "-H \"Authorization: Bearer ${{ secrets.AUTH }}\"" \
          "-H \"X-GitHub-Api-Version: 2022-11-28\"" \
          "https://api.github.com/repos/${{ github.repository }}/dispatches" \
          "-d '{\"event_type\":\"${{ env.NEXT_WORKFLOW }}\"," \
          "\"client_payload\":{" \
          "\"sha\":\"${{ env.SHA }}\"," \
          "\"sha_branch\":\"${{ env.SHA_BRANCH }}\"," \
          "\"csproj\":\"${{ env.CSPROJ }}\"}'")

          retries=0
          while [[ $retries -lt ${{ vars.MAX_RETRIES }} ]]; do
            eval "$CMD"
            CURL_EXIT_CODE=$?
            if [[ $CURL_EXIT_CODE -ne 0 ]]; then
              echo "##[error] Curl command failed on attempt $((retries+1)) with exit code $CURL_EXIT_CODE"
                retries=$((retries+1))
                if [[ $retries -lt ${{ vars.MAX_RETRIES }} ]]; then
                  echo "##[warn] Retrying in ${{ vars.WAIT_SECONDS }} seconds..."
                  sleep ${{ vars.WAIT_SECONDS }}
                else
                  echo "##[error] Exhausted ${{ vars.MAX_RETRIES }} retries at ${{ vars.WAIT_SECONDS }} intervals."
                  echo "##[error] Failed to trigger ${{ env.NEXT_WORKFLOW }} workflow with CURL command: $CMD." && exit 90
                fi
              else
                echo "##[info] Curl success."
                break
              fi    
          done
          echo "##[debug] CURL command: $CMD"
