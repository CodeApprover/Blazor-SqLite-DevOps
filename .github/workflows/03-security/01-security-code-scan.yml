---
name: "Security Code Scan"

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates SecurityCodeScan with GitHub's Code Scanning feature
# SecurityCodeScan is a vulnerability patterns detector for C# and VB.NET

on:
  push:
    branches: main

  repository_dispatch:
    types: trigger-security-analysis

env:
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.sha_branch }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:

  SCS:
    runs-on: windows-latest

    steps:

      - uses: actions/checkout@v3.6.0
      - uses: nuget/setup-nuget@04b0c2b8d1b97922f67eca497d7cf0bf17b8ffe1
      - uses: microsoft/setup-msbuild@v1.0.2

      - name: Set up projects for analysis
        uses: security-code-scan/security-code-scan-add-action@f8ff4f2763ed6f229eded80b1f9af82ae7f32a0d

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '7.0.x'

      - name: Retrieve Cached dotnet Dependencies
        id: cache-dotnet-restore
        uses: actions/cache@v3.3.1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ env.SHA }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Restore Dependencies
        run: |
          if [ "${{ steps.cache-dotnet-restore.outputs.cache-hit }}" != 'true' ]; then
            dotnet restore --no-cache "$CSPROJ" || (echo "##[error] Dotnet restore failed" && exit 34)
          fi

      - name: Dotnet build
        run: dotnet build --no-restore $CSPROJ  || (echo "##[error] Dotnet restore failed" && exit 35)

      - name: Convert sarif for uploading to GitHub
        uses: security-code-scan/security-code-scan-results-action@cdb3d5e639054395e45bf401cba8688fcaf7a687

      - name: Upload sarif
        uses: github/codeql-action/upload-sarif@v2

      - name: Trigger Next Workflow # production 06-superlinter.yml | staging 07-versioning.yml
        if: success()
        run: |
          trigger="trigger-superlinter"
          if [ "${{ env.SHA_BRANCH }}" == "code-staging" ]; then
              trigger="trigger-versioning"
          fi
          echo "##[info] Calling $trigger"

          BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
          SHA="\"sha\": \"${{ env.SHA }}\","
          CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
          BRANCH="\"sha_branch\": \"${{ env.SHA_BRANCH }}\""
          END="}}"

          curl -s -o /dev/null -X POST \
          -H "Authorization: Bearer ${{ secrets.AUTH }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "$BASE$SHA$CSPROJ$BRANCH$END" \
          "https://api.github.com/repos/${{ github.repository }}/dispatches"
