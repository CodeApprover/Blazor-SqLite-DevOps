---
name: "Development"

# All branches

on:
  workflow_run:
    workflows: 
      - StyleCop
    types:
      - complete

env:
  PROJ_NAME: "Blazor SqlLite Golf Club"

jobs:

  dev-unit-tests:
    name: Unit Tests (${{ matrix.test_framework }})
    runs-on: ubuntu-latest
    timeout-minutes: 15

    if: >
      github.event.workflow_run.conclusion != 'success' &&
      github.ref == 'refs/heads/code-development' ||
      github.ref == 'refs/heads/code-staging' ||
      github.ref == 'refs/heads/code-production' ||
      github.ref == 'refs/heads/main'

    steps:

    - name: Extract SHA for Checkout
      run: |
        echo "SHA=$(echo '${{ github.event.client_payload.sha }}')" >> $GITHUB_ENV

    - name: Checkout SHA repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}

    - name: Fetch all branches
      run: git fetch --all

    - name: Extract Branch Name from SHA Commit
      run: |
        branch=$(git branch -r --contains ${{ env.SHA }} | grep 'origin/' | sed 's#origin/##' | head -n 1 | xargs)
        if [[ -z "$branch" ]]; then
          echo "Failed to extract branch name for SHA: ${{ env.SHA }}"
          exit 1
        fi
        echo "BRANCH_NAME=$branch" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
        else
          test_type="Xunit_Game_Unit_Tests"
        fi
        CMD="dotnet restore --no-cache"
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

    - name: Run Nunit and Xunit unit tests
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
          log_file_name="nunit-results.trx"
        else
          test_type="Xunit_Game_Unit_Tests"
          log_file_name="xunit-results.trx"
        fi
        CMD="dotnet test"
        CMD+=" --no-restore --verbosity detailed"
        CMD+=" --logger \"trx;LogFileName=${log_file_name}\""
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

  createPR:
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Checkout code
      uses: actions/checkout@v3.5.3

    - name: Set up GH CLI
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
        sudo apt-add-repository https://cli.github.com/packages
        sudo apt update
        sudo apt install gh

    - name: Create Pull Request
      run: |
        git config --global user.name "CodeApprover"
        git config --global user.email "pucfada@pm.me@github.com"
        gh pr create --title "Automated: Merge ${{ github.event.client_payload.branch_name }} after StyleCop linting for commit ${{ env.SHA }}" --body "This PR passed the StyleCop linting tests and is ready for review." --base code-development --head ${{ github.event.client_payload.branch_name }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
