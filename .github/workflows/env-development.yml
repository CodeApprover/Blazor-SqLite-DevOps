---
name: "Development Tests"

# code-development

on:
  workflow_run:
    workflows: "Linter StyleCop"
    types:
      - completed

env:
  BASE_PATH: "${{ github.workspace }}"
  BRANCH_NAME: "$(echo ${{ github.ref }} | grep -oE '[^-]+$')" 
  PROJ_DIR: "/Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/"
  PROJ_FILE: "Blazor SqlLite Golf Club.csproj"

jobs:
  # DEVELOPMENT ENVIRONMENT - NUnit and Xunit unit tests
  dev-unit-tests:
    name: Dev Unit Tests (${{ matrix.test_framework }})
    runs-on: ubuntu-latest
    timeout-minutes: 360
    environment:
      development

    if: >
      (github.ref == 'refs/heads/code-development' ||
      github.ref == 'refs/heads/code-staging' ||
      github.ref == 'refs/heads/code-production' ||
      github.ref == 'refs/heads/main') &&
      github.event_name == 'workflow_run'

    strategy:
      matrix:
        test_framework: ['Nunit', 'Xunit']

    steps:
      - name: Log Timestamp
        run: date

      - name: Set filepaths
        run: CSPROJ="${{ env.BASE_PATH }}/${{ env.BRANCH_NAME }}${{ env.PROJ_DIR }}${{ env.PROJ_FILE }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3.5.3

      - name: Install dependencies
        run: |
          if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
            test_type="Nunit_Player_Unit_Tests"
          else
            test_type="Xunit_Game_Unit_Tests"
          fi
          CMD="dotnet restore --no-cache"
          CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
          eval "$CMD"

      - name: Run Nunit and Xunit unit tests
        run: |
          if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
            test_type="Nunit_Player_Unit_Tests"
            log_file_name="nunit-results.trx"
          else
            test_type="Xunit_Game_Unit_Tests"
            log_file_name="xunit-results.trx"
          fi
          CMD="dotnet test"
          CMD+=" --no-restore --verbosity detailed"
          CMD+=" --logger \"trx;LogFileName=${log_file_name}\""
          CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
          eval "$CMD"

  # DEVELOPMENT ENVIRONMENT - Build backUp artifact
  build-dev-artifact:
    name: Dev Build BackUp Artifact
    runs-on: ubuntu-latest
    environment:
      development
    if: startsWith(github.ref, 'refs/heads/code-development')
    needs: dev-unit-tests
    steps:
      - name: Artifact checkout repository
        uses: actions/checkout@v3.5.3

      - name: Artifact remove existing .NET Core SDK
        run: sudo rm -rf /usr/share/dotnet

      - name: Artifact setup .NET environment
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '7.0.x'

      - name: Artifact restore dependencies
        run: |
          CMD="dotnet restore --no-cache"
          CMD+=" \"${{ env.CSPROJ }}\""
          eval "$CMD"

      - name: Build Artifact
        run: |
          CMD="dotnet build --no-restore --configuration Release"
          CMD+=" \"${{ env.CSPROJ }}\""
          eval "$CMD"

      - name: Publish Artifact
        run: |
          CMD="dotnet publish --configuration Release"
          CMD+=" --no-build --output ./publish"
          CMD+=" \"${{ env.CSPROJ }}\""
          eval "$CMD"

      - name: Archive Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: staging-artifact
          path: ./publish/*
          if-no-files-found: error # warn/ignore
