---
name: "Development Tests"

# Development Environment (code-development) Tests

on:
  repository_dispatch:
    types: "trigger-development-tests"

env:
  PROJ_NAME: "Blazor-SqLite-Golf-Club"

jobs:

  dev-unit-tests:

    name: Unit Tests (${{ matrix.test_framework }})
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        test_framework: [Nunit, Xunit]

    steps:

    - name: Checkout SHA repository
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ github.event.client_payload.sha }}
        fetch-depth: 0 # Fetch all

    - name: Install dependencies
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
        else
          test_type="Xunit_Game_Unit_Tests"
        fi
        CMD="dotnet restore --no-cache"
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

    - name: Run Nunit and Xunit unit tests
      run: |
        if [ "${{ matrix.test_framework }}" == "Nunit" ]; then
          test_type="Nunit_Player_Unit_Tests"
          log_file_name="nunit-results.trx"
        else
          test_type="Xunit_Game_Unit_Tests"
          log_file_name="xunit-results.trx"
        fi
        CMD="dotnet test"
        CMD+=" --no-restore --verbosity detailed"
        CMD+=" --logger \"trx;LogFileName=${log_file_name}\""
        CMD+=" \"${{ github.workspace }}/tests/${test_type}/${test_type}.csproj\""
        eval "$CMD"

  trigger-next-workflow:

    name: Trigger Next Workflow
    runs-on: ubuntu-latest
    needs: dev-unit-tests
    timeout-minutes: 15

    steps:

    - name: Trigger Appropriate Workflow
      run: |
        CMD="curl -X POST -H \"Authorization: Bearer ${{ secrets.AUTH }}\" "
        CMD+="-H \"Accept: application/vnd.github.v3+json\" "
        CMD+="https://api.github.com/repos/${{ github.repository }}/dispatches "
        CMD+="-d '{\"event_type\": \"trigger-test-success\", "
        CMD+="\"client_payload\": {\"sha\": \"${{ github.event.client_payload.sha }}\"}}'"
        eval ${CMD}
