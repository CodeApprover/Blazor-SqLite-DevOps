---
name: "Cache Dependencies"

# Caches reusable dependencies such as nuget packages

# Exit Codes
# 1: Failed to publish status from workflow
# 2: Curl command to trigger next workflow failed
 
on:
  repository_dispatch:
    types: trigger-cache-dependencies

env:
  # Environmental values pre-validated
  SHA: ${{ github.event.client_payload.sha }}
  SHA_BRANCH: ${{ github.event.client_payload.branch_name }}
  CSPROJ: ${{ github.event.client_payload.csproj }}

jobs:

  prepare-dotnet:

    name: Cache Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: (github.actor != 'CodeApprover')

    steps:

    - name: Checkout SHA Repository
      id: checkout-sha
      uses: actions/checkout@v3.5.3
      with:
        ref: ${{ env.SHA }}
        fetch-depth: 0

    - name: Report
      run: |
        echo "##[debug] Checking initial state"
        date
        echo "SHA=${{ env.SHA }}"
        echo "Environment=${{ env.SHA_BRANCH }}"
        echo "Branch=${{ env.SHA_BRANCH }}"
        echo "Committer=$(git log -1 --pretty=format:'%an')"

    - name: Restore Dependencies
      run: |
        echo "Restoring .NET dependencies for ${{ env.CSPROJ }}"
        dotnet restore ${{ env.CSPROJ }}

    # Cache .NET dependencies for faster subsequent workflow runs
    - name: Cache dotnet Dependencies
      id: cache-dotnet-restore
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-${{ env.SHA }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Set default job status
      run: echo "JOB_STATUS=success" >> $GITHUB_ENV

    - name: Set failure status if any step failed
      run: |
        echo "##[error] Failed detected in previous steps"
        echo "JOB_STATUS=failure" >> $GITHUB_ENV
      if: failure()

    - name: Publish success or failure status for tracking
      run: |
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
        -H "Authorization: token ${{ secrets.AUTH }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/statuses/${{ env.sha }} \
        -d '{
          "state": "${{ env.JOB_STATUS }}", 
          "description": "Result from Workflow ${{ github.workflow }}",
          "context": "status/${{ github.workflow }}"
        }')
        # Check for failure (non-200 status codes)
        if [[ "$RESPONSE" -ne 200 ]]; then
            echo "##[error] Failed to publish status for ${{ env.SHA }} HTTP Code: $RESPONSE"
            exit 1
        else
            echo "##[debug] Successfully published status for ${{ env.SHA }} HTTP Code: $RESPONSE"
        f

    - name: Trigger Stylecop Workflow # 02-stylecop-linter.yml
      if: success()  
      run: |
        trigger="trigger-stylecop-linter"
        BASE="{\"event_type\": \"$trigger\", \"client_payload\": {"
        SHA="\"sha\": \"${{ env.SHA }}\","
        CSPROJ="\"csproj\": \"${{ env.CSPROJ }}\","
        BRANCH="\"branch_name\": \"${{ env.SHA_BRANCH }}\""
        END="}}"
        PAYLOAD="$BASE$SHA$CSPROJ$BRANCH$END"
    
        CMD="curl -s -o /dev/null -w \"%{http_code}\" -X POST "
        CMD+="-H \"Authorization: Bearer ${{ secrets.AUTH }}\" "
        CMD+="-H \"Accept: application/vnd.github.v3+json\" "
        CMD+="-d '$PAYLOAD' "
        CMD+="https://api.github.com/repos/${{ github.repository }}/dispatches"
        RESPONSE=$("${CMD[@]}")

        if [[ "$RESPONSE" -ne 200 ]]; then
          echo "##[error] ${{ github.workflow }} failed to ${trigger} workflow for ${{ env.SHA }} on branch  ${{ env.SHA_BRANCH }}. HTTP Code: $RESPONSE"
          exit 2
        else
          echo "##[debug] ${{ github.workflow }}  ${trigger} workflow succeeded for ${{ env.SHA }} on branch  ${{ env.SHA_BRANCH }}. HTTP Code: $RESPONSE"
        fi
