---
name: CI/CD Workflow
run-name: ${{ github.actor }} using GitHub Actions 🚀

on:
  push:
    branches: ["main", "code-development", "code-production", "code-staging"]

# Environment variables accessible to all jobs
env:
  VALIDATE_ALL_CODEBASE: false
  MSBUILDDIAGNOSTIC: "true" # DEBUG
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DEFAULT_BRANCH: "${{ github.ref }}"
  GIT_DISCOVERY_ACROSS_FILESYSTEM: true

jobs:

  nunit-tests:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-development') && github.event_name == 'push'
    environment:
      name: development
    steps:
      - name: checkout-repository
        uses: actions/checkout@v2
      - name: install-nunit-dependencies
        run: dotnet restore "$(find "${{ github.workspace }}/Nunit_Player_Unit_Tests/" -type f -name "Nunit_Player_Unit_Tests.csproj" -print -quit)"
      - name: run-nUnit-unit-tests
        run: dotnet test "$(find "${{ github.workspace }}/Nunit_Player_Unit_Tests/" -type f -name "Nunit_Player_Unit_Tests.csproj" -print -quit)" --no-restore --logger:"console;verbosity=detailed"

  xunit-tests:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-development') && github.event_name == 'push'
    environment:
      name: development
    steps:
      - name: checkout-repository
        uses: actions/checkout@v2
      - name: install-xunit-dependencies
        run: dotnet restore dotnet restore "${{ github.workspace }}/Xunit_Player_Unit_Tests/Xunit_Player_Unit_Tests.csproj"
      - name: run-xUnit-unit-tests
        run: dotnet test dotnet restore "${{ github.workspace }}/Xunit_Player_Unit_Tests/Xunit_Player_Unit_Tests.csproj" --no-restore --logger:"console;verbosity=detailed"

  integration-tests:
    runs-on: ubuntu-latest
    needs: nunit-tests
    if: startsWith(github.ref, 'refs/heads/code-staging') && github.event_name == 'push'
    environment:
      name: staging
    steps:
      - name: checkout-repository
        uses: actions/checkout@v2
      - name: install-MSTest-dependencies
        run: dotnet restore "$(find "${{ github.workspace }}/MSTest_Integration_Tests/" -type f -name "MSTest_Integration_Tests.csproj" -print -quit)"
      - name: run-integration-tests
        run: dotnet test "$(find "${{ github.workspace }}/MSTest_Integration_Tests/" -type f -name "MSTest_Integration_Tests.csproj" -print -quit)" --filter Category=Integration --no-restore --logger:"console;verbosity=detailed"
