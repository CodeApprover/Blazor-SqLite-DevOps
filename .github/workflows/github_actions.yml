---
name: "CI-CD Workflow"

on:
  push:
    branches: ["code-development", "code-production", "code-staging"]

jobs:
  ##############################################################################################################
  # Report usage
  ##############################################################################################################
  report:
    name: 1. Report
    runs-on: ubuntu-latest
    steps:
      - name: Report usage
        run: |
          echo GitHub Actions CI/CD Pipeline
          echo runner.os is ${{ runner.os }}
          echo github.repository is ${{ github.repository }}
          echo github.ref is ${{ github.ref }}
          echo github.event_name is ${{ github.event_name }}
          echo github.workspace is ${{ github.workspace }}
          echo -n "environment "
          echo "${{ github.ref }} | grep -oE [^-]+$"

  ##############################################################################################################
  # Run StyleCop Linting - https://github.com/StyleCop/StyleCop
  ##############################################################################################################
  stylecop-linting:
    name: 2. StyleCop Linting
    runs-on: ubuntu-latest
    needs: report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'
      - name: Restore Dependencies
        run: dotnet restore --no-cache \
          "${{ github.workspace }}/$(echo ${{ github.ref }} | grep -oE '[^-]+$')/Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/Blazor SqlLite Golf Club.csproj"
      - name: SytleCop dotnet build
        run: dotnet build --no-restore \
          "${{ github.workspace }}/$(echo ${{ github.ref }} | grep -oE '[^-]+$')/Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/Blazor SqlLite Golf Club.csproj" \
          /p:StyleCopEnabled=true /p:StyleCopTreatErrorsAsWarnings=false /p:StyleCopForceFullAnalysis=false

  ##############################################################################################################
  # Run CodeQL Analysis - https://github.com/github/codeql 
  ##############################################################################################################
  codeql-analysis:
    name: 3. CodeQL Analysis
    runs-on: ubuntu-latest
    needs: stylecop-linting
    timeout-minutes: 360 
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['csharp']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Setup .NET environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'
      - name: Restore Dependencies
        run: dotnet restore --no-cache \
          "${{ github.workspace }}/$(echo ${{ github.ref }} | grep -oE '[^-]+$')/Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/Blazor SqlLite Golf Club.csproj"
      - name: Dotnet build
        run: dotnet build --no-restore \
          "${{ github.workspace }}/$(echo ${{ github.ref }} | grep -oE '[^-]+$')/Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/Blazor SqlLite Golf Club.csproj"
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  ##############################################################################################################
  # Run SuperLinter - https://github.com/marketplace/actions/super-linter
  ##############################################################################################################
  super-linter:
    name: 4. SuperLinter
    needs: codeql-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Superlint checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint code-base
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  ##############################################################################################################
  # Development Environment tests
  ##############################################################################################################
  development-environment-nunit-tests:
    name: 5. Development environment Nunit unit tests
    needs: super-linter
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-development') && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nunit dependencies
        run: dotnet restore \
          "/home/runner/work/Blazor-SqLite-DevOps/tests/Nunit_Player_Unit_Tests/Nunit_Player_Unit_Tests.csproj" \
          --filter Category=Development
      - name: Dotnet restore
        run: dotnet build --no-restore \
          "/home/runner/work/Blazor-SqLite-DevOps/tests/Nunit_Player_Unit_Tests/Nunit_Player_Unit_Tests.csproj"
      - name: Run Nunit unit tests
        run: dotnet test --no-restore \
          "/home/runner/work/Blazor-SqLite-DevOps/tests/Nunit_Player_Unit_Tests/Nunit_Player_Unit_Tests.csproj" \
          --filter Category=Development
          
  development-environment-xunit-tests:
    name: 5. Development environment Xunit unit tests
    needs: development-environment-nunit-tests
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-development') && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Xunit dependencies
        run: dotnet restore \
          "/home/runner/work/Blazor-SqLite-DevOps/tests/Xunit_Game_Unit_Tests/Xunit_Game_Unit_Tests.csproj" \
          --filter Category=Development
      - name: Dotnet restore
        run: dotnet build --no-restore \
          "/home/runner/work/Blazor-SqLite-DevOps/tests/Xunit_Game_Unit_Tests/Xunit_Game_Unit_Tests.csproj"
      - name: Run Xunit unit tests
        run: dotnet test --no-restore \
          "/home/runner/work/Blazor-SqLite-DevOps/tests/Xunit_Game_Unit_Tests/Xunit_Game_Unit_Tests.csproj" \
          --filter Category=Development

  # Other environment-specific jobs (staging-environment-tests, production-environment-tests) can be defined here
