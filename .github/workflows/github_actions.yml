name: "CI-CD Workflow"

on:
  push:
    branches: ["code-development", "code-production", "code-staging"]

jobs:

  ##############################################################################################################
  # Report usage
  ##############################################################################################################
  report:
    name: 1. Report
    runs-on: ubuntu-latest
    steps:
      - name: Running server
        run: echo "Running a ${{ runner.os }} server on GitHub Actions."
      - name: Repository information
        run: echo "${{ github.repository }} repository"
      - name: Environment branch
        run: echo "$(echo "${{ github.ref }}" | sed 's/.*\///' | sed 's/^code-//') branch."
      - name: Triggered event
        run: echo "Job triggered by a ${{ github.event_name }}"

  
  ##############################################################################################################
  # Run StyleCop Linting - https://github.com/StyleCop/StyleCop
  ##############################################################################################################
  stylecop-linting:
    name: 2. StyleCop Linting
    runs-on: ubuntu-latest
    needs: report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Run StyleCop
        run: dotnet stylecop -p:StyleCopEnabled=true
      - name: Generate StyleCop Report
        run: dotnet stylecop -r "stylecop-report.xml"
      - name: Fail the build on violations
        run: |
          if [ -f "stylecop-report.xml" ]; then
            echo "StyleCop violations found:"
            cat stylecop-report.xml
            exit 1
          fi

  
  #############################################################################################################
  # Run CodeQL Linter - https://github.com/github/codeql
  ##############################################################################################################
  codeql:
    runs-on: ubuntu-latest
    name: CodeQL linter
    needs: stylecop-linting
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CodeQL bundle
        id: codeql-bundle
        uses: advanced-security/codeql-bundle-action@v1.1.0
        with:
          # CodeQL packs that are available in the current repository
          packs: "octo-org/java-lib,octo-org/java-queries,octo-org/java-customizations"
      - name: Bundle release
        env:
          BUNDLE_PATH: ${{ steps.codeql-bundle.outputs.bundle-path }}
          BUNDLE_TAG: ${{ steps.codeql-bundle.outputs.bundle-tag }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          if gh release view $BUNDLE_TAG; then
            gh release upload --clobber $BUNDLE_TAG $BUNDLE_PATH
          else
            gh release create $BUNDLE_TAG $BUNDLE_PATH --generate-notes
          fi


  ##############################################################################################################
  # Run SuperLinter - https://github.com/marketplace/actions/super-linter
  ##############################################################################################################
  super-linter:
    name: 4. Super Linter
    needs: codeql
    runs-on: ubuntu-latest
    steps:
      - name: Superlint checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint code-base
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}


  ##############################################################################################################
  # Development Environment tests
  ##############################################################################################################
  development-environment-tests:
    name: Development environment tests
    needs: super-linter
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-development') && github.event_name == 'push'
    environment:
      name: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nunit dependencies
        run: dotnet restore "$(find "${{ github.workspace }}" -type f -name "Nunit_Player_Unit_Tests.csproj" -print -quit)"
      - name: Run NUnit unit tests
        run: dotnet test "$(find "${{ github.workspace }}" -type f -name "Nunit_Player_Unit_Tests.csproj" -print -quit) --filter Category=Development --no-restore --logger:"console;verbosity=detailed"
      - name: Install Xunit dependencies
        run: dotnet restore " $(find "${{ github.workspace }}" -type f -name "Xunit_Game_Unit_Tests.csproj" -print -quit)"
      - name: Run XUnit unit tests
        run: dotnet test " $(find "${{ github.workspace }}" -type f -name "Xunit_Game_Unit_Tests.csproj" -print -quit) --filter Category=Development --no-restore --logger:"console;verbosity=detailed"


  ##############################################################################################################
  # Staging Environment tests
  ##############################################################################################################
  staging-environment-tests:
    name: Staging environment tests
    needs: super-linter
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-staging') && github.event_name == 'push'
    environment:
      name: staging
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install MSTest dependencies
        run: dotnet restore "$(find "${{ github.workspace }}" -type f -name "MSTest_Integration_Tests.csproj" -print -quit)"
      - name: Run integration tests
        run: dotnet test "$(find "${{ github.workspace }}" -type f -name "MSTest_Integration_Tests.csproj" -print -quit) --filter Category=Integration --no-restore --logger:"console;verbosity=detailed"
  
  
  ##############################################################################################################
  # Production Environment tests
  ##############################################################################################################
  production-environment-tests:
    name: Production environment tests
    needs: super-linter
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/code-production') && github.event_name == 'push'
    environment:
      name: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
