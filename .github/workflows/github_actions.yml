name: CI/CD Workflow

on:
  #workflow_run:
    #workflows: ["CodeQL"]
    #branches: [ "main", "code-development", "code-production", "code-staging" ]
    #types:
      #- completed
  push:
    branches: [ "main", "code-development", "code-production", "code-staging" ]

# Environment variables accessible to all jobs
env:
  MSBUILDDIAGNOSTIC: true # DEBUG: Show detailed MSBuild output

jobs:

  # Define reusable setup steps
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Install project dependencies
        run: dotnet restore "./Blazor-SqlLite-DevOps/Blazor SqlLite Golf Club/Blazor-SqlLite-Golf-Club.csproj"
        
  # StyleCop C# Linting - Run on every commit
  stylecop-linting:
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Install project dependencies
        run: dotnet restore ./StyleCop_CSharp_Linting/StyleCop_CSharp_Linting.csproj
        
      - name: Install StyleCop
        run: dotnet tool install -g StyleCop.Analyzers #--version 1.1.118

      - name: Lint with StyleCop
        run: dotnet stylecop
        
      - name: Run StyleCop Linting Test Suite
        working-directory: ./StyleCop_CSharp_Linting/
        run: dotnet test --no-restore --logger:"console;verbosity=detailed"

  # Unit tests (XUnit and NUnit) - Run in code-development environment
  code-development:
    runs-on: ubuntu-latest
    needs: stylecop-linting
    environment:
      name: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Nunit dependencies
        run: dotnet restore ./Nunit_Player_Unit_Tests/Nunit_Player_Unit_Tests.csproj
        
      - name: Install Xunit dependencies
        run: dotnet restore ./Xunit_Player_Unit_Tests/Xunit_Player_Unit_Tests.csproj

      - name: Run XUnit and NUnit unit tests
        run: dotnet test ./Nunit_Player_Unit_Tests/Nunit_Player_Unit_Tests.csproj ./Xunit_Player_Unit_Tests/Xunit_Player_Unit_Tests.csproj --no-restore --logger:"console;verbosity=detailed"

  # Integration tests - Run in code-staging environment
  code-staging:
    runs-on: ubuntu-latest
    needs: code-development
    environment:
      name: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install MSTest dependencies
        run: dotnet restore ./MSTest_Integration_Tests/MSTest_Integration_Tests.csproj

      - name: Run integration tests
        run: dotnet test ./MSTest_Integration_Tests/MSTest_Integration_Tests.csproj --filter Category=Integration --no-restore --logger:"console;verbosity=detailed"
        
